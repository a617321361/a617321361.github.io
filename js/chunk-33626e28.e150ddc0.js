(window["webpackJsonp"]=window["webpackJsonp"]||[]).push([["chunk-33626e28"],{"02f4":function(t,n,e){var s=e("4588"),l=e("be13");t.exports=function(t){return function(n,e){var i,a,p=String(l(n)),o=s(e),f=p.length;return o<0||o>=f?t?"":void 0:(i=p.charCodeAt(o),i<55296||i>56319||o+1===f||(a=p.charCodeAt(o+1))<56320||a>57343?t?p.charAt(o):i:t?p.slice(o,o+2):a-56320+(i-55296<<10)+65536)}}},"0390":function(t,n,e){"use strict";var s=e("02f4")(!0);t.exports=function(t,n,e){return n+(e?s(t,n).length:1)}},"0bfb":function(t,n,e){"use strict";var s=e("cb7c");t.exports=function(){var t=s(this),n="";return t.global&&(n+="g"),t.ignoreCase&&(n+="i"),t.multiline&&(n+="m"),t.unicode&&(n+="u"),t.sticky&&(n+="y"),n}},"214f":function(t,n,e){"use strict";e("b0c5");var s=e("2aba"),l=e("32e9"),i=e("79e5"),a=e("be13"),p=e("2b4c"),o=e("520a"),f=p("species"),d=!i(function(){var t=/./;return t.exec=function(){var t=[];return t.groups={a:"7"},t},"7"!=="".replace(t,"$<a>")}),g=function(){var t=/(?:)/,n=t.exec;t.exec=function(){return n.apply(this,arguments)};var e="ab".split(t);return 2===e.length&&"a"===e[0]&&"b"===e[1]}();t.exports=function(t,n,e){var y=p(t),v=!i(function(){var n={};return n[y]=function(){return 7},7!=""[t](n)}),b=v?!i(function(){var n=!1,e=/a/;return e.exec=function(){return n=!0,null},"split"===t&&(e.constructor={},e.constructor[f]=function(){return e}),e[y](""),!n}):void 0;if(!v||!b||"replace"===t&&!d||"split"===t&&!g){var r=/./[y],m=e(a,y,""[t],function(t,n,e,s,l){return n.exec===o?v&&!l?{done:!0,value:r.call(n,e,s)}:{done:!0,value:t.call(e,n,s)}:{done:!1}}),x=m[0],h=m[1];s(String.prototype,t,x),l(RegExp.prototype,y,2==n?function(t,n){return h.call(t,this,n)}:function(t){return h.call(t,this)})}}},"25a9":function(t,n){t.exports={allarticlelist:[{content:'<p style="text-align: center;"><img src="https://yy.kpzs.com/upload/image/1905221728322983.jpg" style="max-width:100%;"><br></p><p style="text-align: left;"><span style="font-weight: normal;"></span>第一句：优秀也是一种习惯。<br></p><p style="text-align: left;"><span style="font-weight: normal;">这句话是古希腊哲学家亚里士多德说的。如果说优秀是一种习惯，那么懒惰也是一种习惯。人出生的时候，除了脾气会因为天性而有所不同，其他的东西基本都是后天形成的，是家庭影响和教育的结果。所以，我们的一言一行都是日积月累养成的习惯。我们有的人形成了很好的习惯，有的人形成了很坏的习惯。所以我们从现在起就要把优秀变成一种习惯，使我们的优秀行为习以为常，变成我们的第二天性。让我们习惯性地去创造性思考，习惯性地去认真做事情，习惯性地对别人友好，习惯性地欣赏大自然。&nbsp;&nbsp;<br></span></p><p style="text-align: left;"><span style="font-weight: normal;">注解：要会装，要持续的、不间断的装，装久了就成了真的了，就成了习惯了，比如准时到会，每次都按时到会，你装装看，你装30年看看，装的时间长了就形成了习惯。&nbsp;&nbsp;<br></span></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p><p style="text-align: left;">第二句：生命是一种过程。&nbsp;&nbsp;<span style="font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal;">事情的结果尽管重要，但是做事情的过程更加重要，因为结果好了我们会更加快乐，但过程使我们的生命充实。人的生命最后的结果一定是死亡，我们不能因此说我们的生命没有意义。世界上很少有永恒。大学生谈恋爱，每天都在信誓旦旦地说我会爱你一辈子，这实际上是不真实的。统计数据表明，大学生谈恋爱的100对里有90对最后会分手，最后结婚了的还有一半会离婚。你说爱情能永恒吗？所以最真实的说法是：我今天，此时此刻正在真心地爱着你。明天也许你会失恋，失恋后我们会体验到失恋的痛苦。这种体验也是丰富你生命的一个过程。&nbsp;</span></p><p style="text-align: left;"><span style="font-weight: normal;">注解：生命本身其实是没有任何意义的，只是你自己赋予你的生命一种你希望实现的意义，因此享受生命的过程就是一种意义所在。&nbsp;</span><br></p><p style="text-align: left;"><br>↵\t第三句：两点之间最短的距离并不一定是直线。&nbsp;</p><p style="text-align: left;"><span style="font-weight: normal;">在人与人的关系以及做事情的过程中，我们很难直截了当就把事情做好。我们有时需要等待，有时需要合作，有时需要技巧。我们做事情会碰到很多困难和障碍，有时候我们并不一定要硬挺、硬冲，我们可以选择有困难绕过去，有障碍绕过去，也许这样做事情更加顺利。大家想一想，我们和别人说话还得想想哪句话更好听呢。尤其在中国这个比较复杂的社会中，大家要学会想办法谅解别人，要让人觉得你这个人很成熟，很不错，你才能把事情做成。&nbsp;</span></p><p style="text-align: left;"><span style="font-weight: normal;">↵注解：如果你在考数学试题，一定要答两点之间直线段最短，如果你在走路，从A到B，明明可以直接过去，但所有人都不走，你最好别走，因为有陷阱。在中国办事情，直线性思维在很多地方要碰壁，这是中国特色的中国处事智慧。</span>&nbsp;&nbsp;<br></p><p style="text-align: left;"><br>↵第四句：只有知道如何停止的人才知道如何加快速度。&nbsp;&nbsp;</p><p style="text-align: left;"><span style="font-weight: normal;">↵\t我在滑雪的时候，最大的体会就是停不下来。我刚开始学滑雪时没有请教练，看着别人滑雪，觉得很容易，不就是从山顶滑到山下吗？于是我穿上滑雪板，哧溜一下就滑下去了，结果我从山顶滑到山下，实际上是滚到山下，摔了很多个跟斗。我发现根本就不知道怎么停止、怎么保持平衡。最后我反复练习怎么在雪地上、斜坡上停下来。练了一个星期，我终于学会了在任何坡上停止、滑行、再停止。这个时候我就发现自己会滑雪了，就敢从山顶高速地往山坡下冲。因为我知道只要我想停，一转身就能停下来。只要你能停下来，你就不会撞上树、撞上石头、撞上人，你就不会被撞死。因此，只有知道如何停止的人，才知道如何高速前进。注解：用汽车来比喻，宝马可以上200公里，奇瑞却只能上120公里，为什么？发动机估计不相上下，差距在刹车系统，上了200公里刹不了车，呵呵，我的天！&nbsp;&nbsp;</span><br></p><p style="text-align: left;"><br>↵第五句：放弃是一种智慧，缺陷是一种恩惠。&nbsp;</p><p style="text-align: left;"><span style="font-weight: normal;">当你拥有六个苹果的时候，千万不要把它们都吃掉，因为你把六个苹果全都吃掉，你也只吃到了六个苹果，只吃到了一种味道，那就是苹果的味道。如果你把六个苹果中的五个拿出来给别人吃，尽管表面上你丢了五个苹果，但实际上你却得到了其他五个人的友情和好感。以后你还能得到更多，当别人有了别的水果的时候，也一定会和你分享，你会从这个人手里得到一个橘子，那个人手里得到一个梨，最后你可能就得到了六种不同的水果，六种不同的味道，六种不同的颜色，六个人的友谊。人一定要学会用你拥有的东西去换取对你来说更加重要和丰富的东西。所以说，放弃是一种智慧。</span></p><p style="text-align: left;"><span style="font-weight: normal;">注解：每一次放弃都必须是一次升华，否则就不要放弃；每一次选择都必须是一次升华，否则不要选择。</span></p><p style="text-align: left;"><span style="font-weight: normal;">提示：做人最大的乐趣在于通过奋斗去获得我们想要的东西，所以有缺点意味着我们可以进一步完美，有匮乏之处意味着我们可以进一步努力。当一个人什么都不缺的时候，他的生存空间就被剥夺掉了。如果我们每天早上醒过来，感到自己今天缺点儿什么，感到自己还需要更加完美，感到自己还有追求，那是一件多么值得高兴的事情啊！&nbsp;<br></span></p>',time:"2019-05-21 14:43:18",title:"人生不可错过的五句话",txt:"叶子博客摘要：https://www.yezismile.com/detail/15.html",type:"2"},{content:'<p style="text-align: left;"><span style="font-size: x-large;"><span style="font-weight: normal;"></span><strong style="">1.获取当前时间</strong></span><br></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var myDate = new Date();&nbsp;&nbsp;</span><strong><br></strong></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-size: x-large;"><strong>2.获取时间中的年月日时分秒</strong>&nbsp;&nbsp;</span><span style="font-weight: normal; font-size: medium;"><br></span></p><p><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getYear(); // 获取当前年份(2位)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getFullYear(); // 获取完整的年份(4位,1970-????)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getMonth(); // 获取当前月份(0-11,0代表1月)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getDate(); // 获取当前日(1-31)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getDay(); // 获取当前星期X(0-6,0代表星期天)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getTime(); // 获取当前时间(从1970.1.1开始的毫秒数)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getHours(); // 获取当前小时数(0-23)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getMinutes(); // 获取当前分钟数(0-59)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getSeconds(); // 获取当前秒数(0-59)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.getMilliseconds(); // 获取当前毫秒数(0-999)</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.toLocaleDateString(); // 获取当前日期</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">var mytime=myDate.toLocaleTimeString(); // 获取当前时间</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;">myDate.toLocaleString( ); // 获取日期与时间</span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: medium; font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;"><strong>3.时间的格式化</strong>&nbsp;&nbsp;</span><br></div></p><p><div style="text-align: left;"><span style="font-weight: normal; font-size: small;">// 对Date的扩展，将 Date 转化为指定格式的String</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: small;">// 月(M)、日(d)、小时(h)、分(m)、秒(s)、季度(q) 可以用 1-2 个占位符，</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: small;">// 年(y)可以用 1-4 个占位符，毫秒(S)只能用 1 个占位符(是 1-3 位的数字)</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: small;">// 例子：</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: small;">// (new Date()).Format("yyyy-MM-dd hh:mm:ss.S") ==&gt; 2006-07-02 08:09:04.423</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: small;">// (new Date()).Format("yyyy-M-d h:m:s.S") ==&gt; 2006-7-2 8:9:4.18</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">Date.prototype.Format = function (fmt) { // author: meizz</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var o = {</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"M+": this.getMonth() + 1, // 月份</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"d+": this.getDate(), // 日</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"h+": this.getHours(), // 小时</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"m+": this.getMinutes(), // 分</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"s+": this.getSeconds(), // 秒</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"q+": Math.floor((this.getMonth() + 3) / 3), // 季度</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">"S": this.getMilliseconds() // 毫秒</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">};</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">if (/(y+)/.test(fmt))</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">fmt = fmt.replace(RegExp.$1, (this.getFullYear() + "").substr(4 - RegExp.$1.length));</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">for (var k in o)</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">if (new RegExp("(" + k + ")").test(fmt)) fmt = fmt.replace(RegExp.$1, (RegExp.$1.length == 1) ? (o[k]) : (("00" + o[k]).substr(("" + o[k]).length)));</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">return fmt;</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">}</span></div><div style="text-align: left;">调用：&nbsp;</div><div style="text-align: left;"><span style="font-weight: normal;">&nbsp;<span style="text-align: center;">var</span><span style="text-align: center;"> time1 = </span><span style="text-align: center;">new</span><span style="text-align: center;"> </span><span style="text-align: center;">Date</span><span style="text-align: center;">().Format(</span><span style="text-align: center;">"yyyy-MM-dd"</span><span style="text-align: center;">);</span></span></div><div style="text-align: left;"><span style="font-weight: normal;"><span style="text-align: center;"></span><span style="text-align: center;">var</span><span style="text-align: center;"> time2 = </span><span style="text-align: center;">new</span><span style="text-align: center;"> </span><span style="text-align: center;">Date</span><span style="text-align: center;">().Format(</span><span style="text-align: center;">"yyyy-MM-dd HH:mm:ss"</span><span style="text-align: center;">);&nbsp;</span></span><span style="font-weight: normal; font-size: medium;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><span style="text-align: center;"><br></span></span></div><div style="text-align: left;"><span style="font-weight: normal;"><span style="text-align: center;"><br></span></span></div><div style="text-align: left;"><span style="text-align: center; font-size: x-large;">4.获取当前年月日时分秒 （方法）</span></div></p><div><span style="font-weight: normal; font-size: medium;"><span>function</span><span> </span><span>getNowFormatDate</span><span>() {</span></span></div><div>&nbsp; &nbsp;&nbsp;<span style="font-size: medium; font-weight: normal;">\n        var </span><span style="font-size: medium; font-weight: normal;">date</span><span style="font-size: medium; font-weight: normal;"> </span><span style="font-size: medium; font-weight: normal;">=</span><span style="font-size: medium; font-weight: normal;"> </span><span style="font-size: medium; font-weight: normal;">new</span><span style="font-size: medium; font-weight: normal;"> </span><span style="font-size: medium; font-weight: normal;">Date</span><span style="font-size: medium; font-weight: normal;">();</span></div><div style="text-align: left;"><divcourier new\',="" monospace;font-weight:="" normal;font-size:="" 14px;line-height:="" 19px;white-space:="" pre;"="" style=""><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;var year = date.getFullYear();</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;var month = date.getMonth() + 1;</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;var strDate = date.getDate();</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;if (month &gt;= 1 &amp;&amp; month &lt;= 9) {</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;month = "0" + month;</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;}</div><div style="font-size: medium; font-weight: normal;"> &nbsp; &nbsp; &nbsp;if (strDate &gt;= 0 &amp;&amp; strDate &lt;= 9) {</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;strDate = "0" + strDate;</div><div style="font-size: medium; font-weight: normal;"> &nbsp;&nbsp;&nbsp;&nbsp;}</div><div style="font-size: medium; font-weight: normal;"> var hour = date.getHours();</div><div style="font-size: medium; font-weight: normal;"> var minute = date.getMinutes();</div><div style="font-size: medium; font-weight: normal;"> var second = date.getSeconds();</div><div style="font-size: medium; font-weight: normal;"> var currentdate = year +\'-\'+ month +\'-\'+ strDate+\' \'+hour+\':\'+minute+\':\'+second;</div><div style="font-size: medium; font-weight: normal;"> return currentdate;</div><div style="font-size: medium; font-weight: normal;">}</div><div style="font-size: medium; font-weight: normal;"><br></div><div style=""><span style="font-size: x-large;">5.获取当前时间戳</span></div><div style=""><span style="font-weight: normal; font-size: medium;">var timestamp = (new Date()).getTime();<br>console.log(timestamp);&nbsp; &nbsp;//1495302061441&nbsp;&nbsp;</span><span style="font-size: x-large;"><br></span></div><div style=""><span style="font-size: x-large;">6.将时间戳转换成日期格式方法</span></div><div style=""><p><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">function format(shijianchuo)//这里是时间戳</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">{</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">//shijianchuo是整数，否则要parseInt转换</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var time = new Date(shijianchuo);</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var y = time.getFullYear();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var m = time.getMonth()+1;</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var d = time.getDate();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var h = time.getHours();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var mm = time.getMinutes();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var s = time.getSeconds();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">return y+\'-\'+add0(m)+\'-\'+add0(d)+\' \'+add0(h)+\':\'+add0(mm)+\':\'+add0(s);</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">}</span></div></p><div><span style="font-weight: normal; font-size: medium;">function add0(m){return m&lt;10?\'0\'+m:m }</span></div><div><span style="font-weight: normal; font-size: medium;">var time =&nbsp;format（<span style="text-align: center;">1558427677806</span>）</span></div><div><span style="font-weight: normal; font-size: medium;">console.log(time)//<span style="text-align: center;">2019-05-21 16:34:37</span></span></div><div><span style="text-align: center; font-size: x-large;">7.日期格式转成时间戳</span></div><div><p><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">var&nbsp;date =&nbsp;new&nbsp;Date(\'2014-04-23 18:55:49:123\');</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; // 有三种方式获取</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; var&nbsp;time1 = date.getTime();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; var&nbsp;time2 = date.valueOf();</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; var&nbsp;time3 = Date.parse(date);</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; console.log(time1);//1398250549123</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; console.log(time2);//1398250549123</span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; console.log(time3);//1398250549000</span></div></p></div><div><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">以上三种获取方式的区别：</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　第一、第二种：会精确到毫秒</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　第三种：只能精确到秒，毫秒用000替代</span></p></div></div><div style=""><span style="font-size: x-large;"><br></span></div><div style="font-size: medium; font-weight: normal;"><br></div></divcourier></div><p><div style="text-align: left;"><br></div></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p>',time:"2019-05-21 16:39:17",title:"js获取当前时间的年月日时分秒以及时间的格式化",txt:"获取当前时间/获取时间中的年月日时分秒/时间的格式化等等",type:"1"},{content:'<h1><span style="font-size: x-large;">一、搭建工作环境环境</span></h1><div><p style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: normal; font-size: medium;">1、从node.js官网下载相应版本进行安装即可 https://nodejs.org/zh-cn/download/，安装完成后在命令行输入&nbsp; node -v 如果可以查询到版本号，说明安装成功。</span></p><p style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-weight: normal; font-size: medium;">2、node自带npm包管理工具，在命令行输入&nbsp; npm -v 如果查询到版本号，说明正常</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　3、npm下载太慢，需要下载国内淘宝镜像： npm install -g cnpm --registry = https://registry.npm.taobao.org，安装完成后输入 cnpm -v 显示版本号，说明正常</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　4、安装webpack（包管理工具），命令行输入&nbsp; cnpm i webpack -g&nbsp; &nbsp;，-g说明是全局安装</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　5、安装vue.cli 3.X脚手架，命令行输入 cnpm i @vue-cli -g&nbsp; &nbsp; &nbsp; 不选择版本号，将下载最新的稳定版本，输入vue -V 可查看版本</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p><h1><span style="font-size: x-large;">二、创建项目&nbsp;</span></h1></div><div><p style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<span style="font-size: medium; font-weight: normal;">1、命令行 进入项目目录</span></p><p style="text-align: left;"><span style="font-size: medium; font-weight: normal;">　　2、创建项目：vue create 项目名称（不要有中文），选择manually select进行选择</span></p><p style="text-align: left;"><span style="font-size: medium; font-weight: normal;">　　3、进入选择界面</span></p><p style="text-align: left;">&nbsp; &nbsp;&nbsp;<img src="https://yy.kpzs.com/upload/image/1905211715184518.png" style="max-width:100%;"><span style="font-size: medium; font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">根据项目需求，点击空格进行选择，一般情况下babel、router、vuex、 css都是需要的，然后回车进行创建项目</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　4、创建时会询问之前选择项目的配置，根据自身项目 要求进行配置，下图是我的配置</span></p><p style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="https://yy.kpzs.com/upload/image/1905211716141780.png" style="max-width:100%;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">最后选择是否作为默认配置，根据个人需要进行选择即可，然后回车，项目开始下载模板</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">　　5、创建完成后，进入项目目录，输入cnpm run serve 即可启动项目，登陆后界面如下图</span></p><p style="text-align: left;">&nbsp; &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<img src="https://yy.kpzs.com/upload/image/1905211716590861.png" style="max-width:100%;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;">&nbsp; &nbsp; &nbsp; &nbsp;&nbsp;<img src="https://yy.kpzs.com/upload/image/1905211717561814.png" style="max-width: 100%;"><br></p></div>',time:"2019-05-21 17:17:59",title:"vue3.0学习笔记（一）",txt:"文章描述了从零开始搭建vue框架3.0版本 很ease哦 转载至：https://www.cnblogs.com/codingstudy/archive/2019/05/21/10898667.html",type:"1"},{content:'<p style="text-align: left;"><span style="font-size: x-large;"><span style="font-weight: normal;"></span>（一）安装Node.js、npm、cnpm<span style="font-weight: normal;"></span></span><br></p><p style="text-align: left;">&nbsp;当我们在<a title="node.js官网" href="https://nodejs.org/en/" target="_blank">官网</a>下载并安装Node时，npm也自动安装好了，一路next后即可。安装好后键入node -v 以及npm -v 来测试是否安装成功（不需要自己手动配置系统环境变量）&nbsp;&nbsp;<span style="font-size: x-large;"><span style="font-weight: normal;"><br></span></span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221452412264.png" style="max-width:100%;"><br></p><p style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;因为国内使用npm很慢，我们可以使用淘宝的cnpm，同时设置镜像地址</p><p style="text-align: left;">&nbsp; &nbsp; &nbsp; &nbsp; &nbsp; npm install -g cnpm --registry=https://registry.npm.taobao.org</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221453102437.png" style="max-width:100%;"><br></p><p style="text-align: left;">安装成功后，可以键入cnpm -v检查是否安装成功&nbsp;</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221453294192.png" style="max-width: 100%;">&nbsp;<br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large;">（二）创建我们的第一个react程序&nbsp;&nbsp;</span><br></p><p style="text-align: left;">例如我们要在D:workSpace下创建first-react-demo这个工程，并跑通，我们依次执行如下步骤&nbsp;&nbsp;</p><p style="text-align: left;">window下进入D:workSpace这个文件夹，在地址栏键入cmd enter</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221458324103.png" style="max-width:100%;"><br></p><p style="text-align: left;">cnpm install -g create-react-app&nbsp; &nbsp;全局安装创建react-app的module（这一步不一定要在workspace目录下）&nbsp;</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221458504318.png" style="max-width: 100%;">&nbsp;<br></p><p style="text-align: left;">create-react-app first-react-demo&nbsp; 在workspct这个文件夹下创建fist-react-demo这个项目&nbsp;</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221459159132.png" style="max-width: 100%;">&nbsp;<br></p><p style="text-align: left;">但是，有可能会报错 Unexpected end of JSON input while parsing near \'....0","dependencies":{"\' ，假如报错，需要执行npm cache clean --force</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221459445288.png" style="max-width:100%;"><br></p><p style="text-align: left;">在创建成功的基础上，我们在打开first-react-demo这个文件夹，地址栏键入cmd并enter，在打开的cmd窗口中，键入npm start&nbsp;</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221500244564.png" style="max-width:100%;"><br></p><p style="text-align: left;">大功告成。浏览器键入localhost:3000即可访问&nbsp;</p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221500504528.png" style="max-width: 100%;">&nbsp;<br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><br></p>',time:"2019-05-22 15:1:3",title:"React前端开发环境搭建",txt:"首先，我们需要明确的是React和很多前端框架一样，底层都还是js以及html，即便它有着看似特殊的jsx语法。  我们要在服务端运行js，就需要依赖一个环境，和运行war包需要tomcat一类中间件一样，运行js需要node.js，  同时因为我们用了各种框架，所以相应的module依赖也需要，需要使用npm工具，这就类似于maven管理jar包依赖一样  同样maven可以修改镜像，而npm也可以改成淘宝的cnpm以及相应module库地址。",type:"1"},{content:'<h2><span style="font-size: xx-large;">1. 实现div的水平居中和垂直居中</span></h2><div>实现效果:&nbsp;</div><div><img src="https://yy.kpzs.com/upload/image/1905221534556531.png" style="max-width: 100%;">&nbsp;<span style="font-size: x-large;"><br></span></div><p style="text-align: left;">这大概是最经典的一个题目了,所以放在第一个. 方法有好多, 一一列来</p><p style="text-align: left;">主要思路其实就是</p><ol><li>使用position,相对父元素做绝对定位(设置百分比[由父元素宽高调节子元素大小]/设置margin和相对位置(确定宽高))</li><li>使用flex属性</li><li>使用tranfrom做相对位移的调节</li></ol><p style="text-align: left;"><span style="font-size: x-large;">1)&nbsp;只适用: 宽高已定</span></p><p style="text-align: left;">设置position: absolute(父元素记得设置: relative), 然后top和left设置50%, 50%, 再设置margin-left=宽/2, margin-top:宽/2</p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: relative; /*很重要,不能忘*/</div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: yellow;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:300px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:200px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;margin-left:-150px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;margin-top:-100px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;top:50%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;left:50%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: absolute;</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div></p><p style="text-align: left;"><span style="font-size: x-large;">2) 只适用: 固定宽高; 如果宽高随意,想靠内部撑开的话, 会占满整个父div<strong style="">&nbsp;</strong></span></p><div><p style="text-align: left;">依然是利用position：子div的上下左右都设置成0，然后margin设置auto。关键是要设置position：子absolute，父relative。</p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: relative; /*很重要,不能忘*/</div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: yellow;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:300px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:200px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;margin:auto;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;bottom: 0;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;top:0;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;left:0;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;right:0;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: absolute;</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div></p><p style="text-align: left;"><span style="font-size: x-large;">3) 适用: 不论是否固定宽高都可用. 问题在于兼容性. ie9及以下不支持</span></p><p style="text-align: left;"><span style="font-size: large;"><br></span></p><div><p style="text-align: left;">设置父级flex属性: display:flex; justify-content:center; align-items: center;&nbsp;</p><p style="text-align: left;">这种方法在子级div有多个时也可以实现居中----具体看flex属性设置</p><p style="text-align: left;"><br></p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;display: flex;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;justify-content: center;　　/*使垂直居中*/</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;align-items:center;　　　　/*使水平居中*/</div> <div style="text-align: left;"><br></div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: yellow;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;/*width:300px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:200px;*/</div><div style="text-align: left;"><br></div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div></p><p style="text-align: left;"><span style="font-size: x-large;">4) 适用: 要设宽度, 否则会使得宽度为父级div的宽度</span></p><p style="text-align: left;"><span style="font-size: large;"><br></span></p><div><p style="text-align: left;">父级元素设置display:table-cell ，然后vertical-align：middle。这种方法可以设置垂直居中. 这时候只要在子元素里设置margin:auto即可实现水平居中</p><p style="text-align: left;">但是这种方法好像会使父元素的居中无效。</p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;display:table-cell;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;vertical-align: middle;</div> <div style="text-align: left;"><br></div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: yellow;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:300px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;/*height:200px;*/</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;margin:auto;</div><div style="text-align: left;"><br></div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div></p><p style="text-align: left;"><span style="font-size: x-large;">5) 适用: 可不指定宽高</span></p><p style="text-align: left;"><span style="font-size: large;"><br></span></p><div><p style="text-align: left;">使用transform居中. 设置父级position:relative; 子级position:absolute. 然后top: 50%; left:50%; transform:translate(-50%,-50%)</p><p style="text-align: left;"><br></p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: relative;</div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: yellow;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: absolute;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;/*width:200px;*/</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;top:50%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;left:50%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;transform:translate(-50%,-50%);</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div></p><p style="text-align: left;"><span style="font-size: x-large;">6) 适用: 指定宽高百分比</span></p><div><p style="text-align: left;">保证left和right的百分数一样就可以实现水平居中，保证top和bottom的百分数一样就可以实现垂直居中。但是这种方法不能由内部元素自动调节div的宽高，而是通过父元素大小控制的</p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:500px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: relative;</div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: yellow;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;position: absolute;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;left: 30%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;right: 30%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;top:40%;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;bottom: 40%;</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div></p></div></div></div></div><p><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">7) 使用display:inline-block加伪元素&nbsp;&nbsp;<br></span></div></p></div><p style="text-align: left;"><br></p><p><div style="text-align: left;">.div1{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:600px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:200px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;border:1px solid black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;text-align: center;</div><div style="text-align: left;">}</div><div style="text-align: left;">.div1:after{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;content:"";</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;display: inline-block;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;vertical-align: middle;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height: 100%;</div><div style="text-align: left;">}</div><div style="text-align: left;">.div2{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background: black;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;color:white;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;display: inline-block;</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;">box 容器通过 after或者before 生成一个高度 100% 的「备胎」，他的高度和容器的高度是一致的，相对于「备胎」垂直居中，在视觉上表现出来也就是相对于容器垂直居中了&nbsp;&nbsp;<br></div></p><p style="text-align: left;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><br></p><h2><span style="font-size: xx-large;">2. 多元素水平居中</span></h2><div><span style="font-size: x-large;"><br></span></div><p style="text-align: left;">效果:&nbsp;&nbsp;<br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221542450028.png" style="max-width:100%;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large;">1) 把子级div设置成display:inline-block; 然后父级div设置text-align:center;&nbsp;&nbsp;&nbsp;&nbsp;</span><br></p><p style="text-align: left;"><br></p><p><div style="text-align: left;">/**base style**/</div><div style="text-align: left;">div{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;background:#000;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;color:#fff;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height:50px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width:50px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;text-align:center;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;line-height:50px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;margin-left:10px;</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;">/**start here**/</div><div style="text-align: left;">main{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;text-align:center;</div><div style="text-align: left;">}</div><div style="text-align: left;">div{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;display:inline-block;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;*display:inline;/*hack IE*/</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;*zoom:1;/*hack IE*/</div><div style="text-align: left;">}</div><div style="text-align: left;"><br></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">2) 更方便灵活的做法还是使用flex-box, 设置水平居中 justify-content: center&nbsp;&nbsp;</span><br></div><div style="text-align: left;"><span style="font-size: large;"><br></span></div></p><pre>main{ display:flex; justify-content:center; }</pre><p style="text-align: left;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><br></p><h2><span style="font-size: xx-large;">3. 实现栅格化布局</span></h2><div><span style="font-size: x-large;"><br></span></div><div><img src="https://yy.kpzs.com/upload/image/1905221544019474.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></div><p style="text-align: left;"><br></p><p style="text-align: left;">使用flex,&nbsp;&nbsp;<br></p><p><div style="text-align: left;">.parent{</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;display: flex;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;flex-direction: column;　　/*按列的顺序*/</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;flex-wrap: wrap;　　/*可换行*/</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;height: 440px;</div><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;width: 660px;</div><div style="text-align: left;">}</div></p><p><div style="text-align: left;"><br></div></p><div style="text-align: left;"></div>',time:"2019-05-22 15:44:41",title:"CSS常见布局问题整理",txt:"实现div的水平居中和垂直居中/多元素水平居中/实现栅格化布局 转载至：https://www.cnblogs.com/haoyijing/p/5815394.html",type:"1"},{content:'<p style="text-align: left;"><span style="font-size: x-large;">1.在github官网创建一个新的项目</span></p><p style="text-align: left;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221708547558.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221710187599.png" style="max-width:100%;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large;">2.将本地项目变成Git可管理的仓库</span></p><p style="text-align: left;"><span style="font-size: medium;">git init</span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221714123601.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><span style="font-size: large;">这时你会发现myproject里面多了个.git文件夹，它是Git用来跟踪和管理版本库的。如果你看不到，是因为它默认是隐藏文件，那你就需要设置一下让隐藏文件可见。&nbsp;&nbsp;<br></span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221715220851.png" style="max-width:100%;"><span style="font-size: large;"><br></span></p><p style="text-align: left;"><span style="font-size: x-large;">3.关联远程仓库</span></p><p style="text-align: left;">&nbsp;git remote add origin https://github.com/a617321361/projectdemo.git<br></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221718164269.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221717446524.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large;">4.配置全局连接权限</span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221721215570.png" style="max-width:100%;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large;">5.保存同步项目到远程仓库</span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221724220288.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large;">6.完成同步</span></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905221726192692.png" style="max-width:100%;"><span style="font-size: x-large;"><br></span></p><p style="text-align: left;"><br></p>',time:"2019-05-22 17:24:50",title:"git上传代码到远程仓库",txt:"最简洁的上传流程",type:"1"},{content:'<p style="text-align: left;"><span style="font-size: x-large;">第一步，下载echarts&nbsp;&nbsp;</span><br></p><pre><span style="font-weight: normal; font-size: medium; font-family: 微软雅黑;">cnpm install echarts --save-dev</span></pre><pre> <span style="font-size: x-large; font-family: 微软雅黑;">第二步，在main.js中全局引入</span></pre><pre> <p><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;; font-weight: normal; font-size: medium; color: rgb(0, 0, 0);">//引入echarts</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;; font-weight: normal; font-size: medium; color: rgb(0, 0, 0);"><br></span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;; font-weight: normal; font-size: medium;">import echarts from \'echarts\'</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;; font-weight: normal; font-size: medium;">Vue.prototype.$echarts = echarts</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;; font-weight: normal; font-size: medium;"><br></span></div><div style="text-align: left;"> <span style="font-size: x-large; font-family: 微软雅黑;">第三步，建立echarts组件</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"> </div></p><p><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;">&lt;template&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> &lt;div class="echarts"&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> &lt;div :style="{height:\'400px\',width:\'100%\'}" ref="myEchart"&gt;&lt;/div&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> &lt;/div&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;">&lt;/template&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;">&lt;script&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> import echarts from "echarts";</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> // import \'../../node_modules/echarts/map/js/world.js\'</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> import \'../../node_modules/echarts/map/js/china.js\' // 引入中国地图数据</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> export default {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> name: "echarts",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> props: ["userJson"],</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> data() {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> return {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> chart: null</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> };</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> mounted() {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> this.chinaConfigure();</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> beforeDestroy() {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> if (!this.chart) {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> return;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> this.chart.dispose();</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> this.chart = null;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> methods: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> chinaConfigure() {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> console.log(this.userJson)</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> let myChart = echarts.init(this.$refs.myEchart); //这里是为了获得容器所在位置 </span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> window.onresize = myChart.resize;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> myChart.setOption({ // 进行相关配置</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> backgroundColor: "#02AFDB",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> tooltip: {}, // 鼠标移到图里面的浮动提示框</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> dataRange: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> show: false,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> min: 0,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> max: 1000,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> text: [\'High\', \'Low\'],</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> realtime: true,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> calculable: true,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> color: [\'orangered\', \'yellow\', \'lightskyblue\']</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> geo: { // 这个是重点配置区</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> map: \'china\', // 表示中国地图</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> roam: true,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> label: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> normal: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> show: true, // 是否显示对应地名</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> textStyle: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> color: \'rgba(0,0,0,0.4)\'</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> itemStyle: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> normal: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> borderColor: \'rgba(0, 0, 0, 0.2)\'</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> emphasis: {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> areaColor: null,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> shadowOffsetX: 0,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> shadowOffsetY: 0,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> shadowBlur: 20,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> borderWidth: 0,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> shadowColor: \'rgba(0, 0, 0, 0.5)\'</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> series: [{</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> type: \'scatter\',</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> coordinateSystem: \'geo\' // 对应上方配置</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> },</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> name: \'启动次数\', // 浮动框的标题</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> type: \'map\',</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> geoIndex: 0,</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> data: [{</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "name": "北京",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "value": 599</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }, {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "name": "上海",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "value": 142</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }, {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "name": "黑龙江",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "value": 44</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }, {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "name": "深圳",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "value": 92</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }, {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "name": "湖北",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "value": 810</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }, {</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "name": "四川",</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> "value": 453</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }]</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> ]</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> })</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"> }</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;">&lt;/script&gt;</span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"><br></span></div><div style="text-align: left;"><span style="font-family: &quot;Microsoft YaHei&quot;;"><br></span></div><div style="text-align: left;"> 效果图如下:</div><div style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905231423484075.png" style="max-width:100%;"> </div></p><div style="text-align: left;"> </div> </pre><pre> </pre>',time:"2019-05-23 14:23:57",title:"vue中使用echarts来绘制世界地图和中国地图",txt:"转载至：https://www.cnblogs.com/ldlx-mars/p/9242250.html",type:"1"},{content:'<p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">&nbsp; &nbsp; &nbsp; &nbsp;曾经上大学时，总是爸妈打电话说钱够花吗，可是工作以后，总是给爸妈打电话问同样的问题。其实，我们每个人都在不断成长着，收起曾经衣来伸手，饭来张口的坏毛病，收起那时的叛逆和任性，尽管自己依旧幼稚，可是现在懂得把温暖带给家人。&nbsp;&nbsp;</span><br></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">曾经一同携手走天涯的那些人早已散落在天涯外，曾经发誓说永远不会和编程挂上钩，可是现在呢，所有的一切都在变，时间在变，环境在变，内心也在变。曾经以为高学历的人一定就是高素质的人，可是遇见一个博士身份的人出口成脏，气急败坏的样子，我觉得自己想错了，有的时候对于某一种人，学历只是一个符号而已，内心的粗鲁和丑恶的嘴脸是打小就养成的。看网上段子说人和猪最大的区别就是，猪永远都是猪，人不一定永远都是人。</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">曾经大学老师讲课总是说这段不讲了，高中老师会讲的，而高中老师总是蛮有信心说大学老师必讲，于是受伤得总是学生角色的我们。待到后来，学会了第六感这个词，每次考试的时候，都耍小聪明不复习，只猜题。偶尔也可以猜中几个大题目，于是一路走来一直坚信着第六感。直到有一天，和面试官聊得蛮好，第六感告诉我面试一定OK的时候，等了差不多一个星期的时候，没有通知，只能重新投简历了，从那以后觉得第六感有时候也会欺骗你。</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">曾经总是喜欢在同学群里聊得热火朝天，谈未来，谈理想，谈不切实际的空想。可是现在呢，同学群我已经屏蔽了好长时间，偶尔点开，弹出的消息都是打广告的陌生人。生活就是这样，别离泪眼朦胧，再回首，却只是拿着毕业照睹物思人。</span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">这遗落的岁月，回忆的时候总是感慨万分。曾经觉得上学那段日子十分辛苦，可是现在始终无法想起为什么那么辛苦。总是觉得过去了的事情总是一并拿下，而过不去的坎总是在明天过去的时候后天重新念叨时，觉得这都不是事儿。</span></p><p style="text-align: center;"><img src="https://yy.kpzs.com/upload/image/1905231535417722.jpg" style="max-width:100%;"><span style="font-weight: normal; font-size: medium;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;"><br></span></p>',time:"2019-05-23 15:35:49",title:"遗落的岁月",txt:"叶子博客  转载至：https://www.yezismile.com/detail/239.html",type:"2"},{content:'<h3><span style="font-size: x-large;">1、react生命周期及相关用法</span></h3><div><p style="text-align: left;"><span style="font-weight: normal; font-size: medium;">react生命周期分为初始化阶段、运行阶段、销毁阶段。</span></p><p style="text-align: left;"><span style="font-size: medium;">(1) 初始化阶段：</span></p><p style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">componentWillMount：实例挂载之前<br>Render：渲染组件<br>componentDidMount：实例挂载完成。一般在这个函数中与后台进行初始化数据交互。&nbsp;&nbsp;</span><span style="font-size: medium;"><br></span></p><p style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-size: medium;">(2)运行阶段：&nbsp;&nbsp;</span><span style="background-color: rgb(238, 236, 224); font-weight: normal;"><br></span></p><p><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">componentWillReceiveProps：父组件改变时调用。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">sholudComponentUpdate：主要是用来手动阻止组件渲染，一般在这个函数中做组件的性能优化。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">componentWillUpdate：组件数据更新前调用</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">componentDidUpdate：组件数据更新完成时调用</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: medium;">(3)销毁阶段：</span>&nbsp;&nbsp;<span style="background-color: rgb(238, 236, 224); font-weight: normal;"><br></span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">componentUnmount：销毁阶段。一般用来销毁不用的变量或者是解除无用定时器以及解绑无用事件。防止内存泄漏问题。&nbsp;&nbsp;</span><br></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224);"><br></span></div></p><h3><span style="font-size: x-large;">2、运行阶段生命周期调用顺序</span></h3><div><span style="font-weight: normal; font-size: medium;">componentWillReceiveProps&nbsp; –&gt;&nbsp; shouldComponentUpdate&nbsp; --&gt;&nbsp; componentWillupdate&nbsp; --&gt;&nbsp; componentDidUpdate&nbsp;&nbsp;</span></div><div><span style="font-weight: normal; font-size: medium;"><br></span></div><div><h3><span style="font-size: x-large;">3、react中key的作用</span></h3></div><div><span style="font-size: medium; font-weight: normal; background-color: rgb(238, 236, 224);">key是React中用于追踪哪些列表中元素被修改、删除或者被添加的辅助标识。在diff算法中，key用来判断该元素节点是被移动过来的还是新创建的元素，减少不必要的元素重复渲染。&nbsp;&nbsp;</span><span style="font-size: x-large;"><br></span></div><div><p><div style="text-align: left;"><span style="font-size: x-large;">4、setState第二个参数的作用</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">因为setState是一个异步的过程，所以说执行完setState之后不能立刻更改state里面的值。如果需要对state数据更改监听，setState提供第二个参数，就是用来监听state里面数据的更改，当数据更改完成，调用回调函数。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">5、sass和less的区别</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">定义变量的符号不同，less是用@，sass使用$</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">变量的作用域不同，less在全局定义，就作用在全局，在代码块中定义，就作用于整哥代码块。而sass只作用域全局。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">编译环境不同，less在开发者环境编译，sass在服务器环境下编译。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">6、vue和react的区别</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">1、react严格上针对的是mvc模式的view层，vue则是mvvm模式。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">2、操作dom的方式不同，vue使用的是指令操作dom，react是通过js进行操作。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">3、数据绑定不同，vue实现的是双向绑定，react的数据流动是单向的。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">4、react中state是不能直接改变的，需要使用setState改变。vue中的state不是必须的，数据主要是由data属性在vue对象中管理的。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">7、react中的高阶函数</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="font-size: medium; background-color: rgb(238, 236, 224); font-weight: normal;">高阶函数就是一个纯js且没有副作用的函数。</span></div><div style="text-align: left;"><span style="font-size: medium; background-color: rgb(238, 236, 224); font-weight: normal;">高阶组件就是一个函数，且该函数接受一个组件作为参数，并返回一个新的组件。</span></div><div style="text-align: left;"><span style="font-size: medium; background-color: rgb(238, 236, 224); font-weight: normal;">相关资料：https://blog.csdn.net/baidu_38151187/article/details/79884613</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">8、react生命周期中，最适合与服务端进行数据交互的是哪个函数</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal; font-size: medium; background-color: rgb(238, 236, 224);">componentDidMount：在这个阶段，实例和dom已经挂载完成，可以进行相关的dom操作。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">9、react中组件传值</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal; background-color: rgb(238, 236, 224); font-size: medium;">父传子（组件嵌套浅）：父组件定义一个属性，子组件通过this.props接收。</span></div><div style="text-align: left;"><span style="font-weight: normal; background-color: rgb(238, 236, 224); font-size: medium;">子传父：父组件定义一个属性，并将一个回调函数赋值给定义的属性，然后子组件进行调用传过来的函数，并将参数传进去，在父组件的回调函数中即可获得子组件传过来的值。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">10、react性能优化阶段函数是哪一个？</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium; font-weight: normal;">shouldComponentUpdate</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">11、react性能优化的方案</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">（1）重写shouldComponentUpdate来避免不必要的dom操作。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">（2）使用 production 版本的react.js。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">（3）使用key来帮助React识别列表中所有子组件的最小变化。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">12、介绍一下webpack</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal; background-color: rgb(238, 236, 224); font-size: medium;">webpack是一个前端模块化打包工具，主要由入口，出口，loader，plugins四个部分。前端的打包工具还有一个gulp，不过gulp侧重于前端开发的过程，而webpack侧重于模块，例如他会将css文件看作一个模块，通过css-loader将css打包成符合css的静态资源。</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">13、Es6中箭头函数与普通函数的区别？</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">1.普通function的声明在变量提升中是最高的，箭头函数没有函数提升</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">2.箭头函数没有this，arguments</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">3.箭头函数不能作为构造函数，不能被new，没有property,</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-weight: normal; font-size: medium;">4.call和apply方法只有参数，没有作用域</span></div><div style="text-align: left;"><br></div><div style="text-align: left;"><span style="font-size: x-large;">14、什么是闭包？闭包有什么危害？如何解决闭包带来的危害？</span></div><div style="text-align: left;"><span style="font-size: x-large;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium;">简单来说，闭包就是一个定义在函数内部的函数。因为js中存在作用域的问题，所以在函数内部定义的变量在函数外部是没有办法直接获取到。而闭包就是沟通函数内部和外部的桥梁，这样在函数外部接可以得到函数内部的值。并且闭包可以实现函数属性和方法的私有化。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium;">闭包的危害：</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium;"><br></span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium;">因为闭包会将内部变量储存在内存中，如果长时间不清除的话会造成内存泄漏的问题，影响程序的性能。</span></div><div style="text-align: left;"><span style="background-color: rgb(238, 236, 224); font-size: medium;">解决方法：对于不使用的变量及时的清除。</span></div></p></div><div style="text-align: left;"></div><p><br><br></p></div>',time:"2019-05-27 14:58:59",title:"有关于React基本知识讲解",txt:"本文装载至：https://blog.csdn.net/xiaochunblog/article/details/85129378",type:"1"},{content:'<p style="text-align: left;">复制此链接打开新页面查看: http://www.hcoder.net/tutorials/info_183.html<br></p>',time:"2019-05-27 17:7:53",title:" Flex布局（小程序Flex布局）视频教程",txt:"网页布局的传统解决方案，基于盒状模型，依赖 display属性 + position属性 + float属性。它对于那些特殊布局非常不方便，比如，垂直居中就不容易实现。  2009年，W3C提出了一种新的方案 - Flex布局，可以简便、完整、响应式地实现各种页面布局。已经得到了所有浏览器的支持，最近刚刚发布的小程序则广泛使用了flx布局，  Flex布局将成为未来布局的首选方案。本视频教程讲详细讲解flex布局的方方面面。",type:"1"},{content:'<p style="text-align: left;"><span style="font-size: medium;">先看效果图&nbsp; ：</span><br></p><p style="text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905311337437067.png" style="max-width:100%;"><br></p><p style="text-align: left;"><br></p><p style="text-align: left;"><span style="font-size: x-large; font-weight: bold;">文件wxml:</span></p><div><div><span style="font-weight: normal; font-size: medium;">&lt;view class=\'geeratepic\'&gt;</span></div><div> <span style="font-weight: normal; font-size: medium;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;image class=\'pic\' src=\'https://henzfin-ias.oss-cn-shenzhen.aliyuncs.com/images/f26ff0be-bfc6-43a5-9f11-6defb8df4d80.png\'&gt;&lt;/image&gt;/*背景图*/</span></div><div> <span style="font-weight: normal; font-size: medium;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;image class=\'myewm\' src=\'{{myewmurl}}\' wx:if=\'{{myewmurl}}\'&gt;&lt;/image&gt;</span><span style="font-weight: normal;">/*二维码*/</span></div><div> <span style="font-weight: normal; font-size: medium;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;image class=\'myheader\' src=\'{{myheaderpic}}\' wx:if=\'{{myheaderpic}}\'&gt;&lt;/image&gt;</span><span style="font-weight: normal;">/*头像*/</span></div><div> <span style="font-weight: normal; font-size: medium;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;canvas canvas-id="mycanvas" class=\'canvas\' id="mycanvas" wx:if=\'{{showCanvas}}\' /&gt;</span></div><div> <span style="font-weight: normal; font-size: medium;">&nbsp;&nbsp;&nbsp;&nbsp;&lt;view class=\'savebtn\' catchtap=\'savePoster\' wx:if="{{showbtn}}" &gt;&lt;image src=\'../../img/download@2x.png\'&gt;&lt;/image&gt;&lt;text&gt;保存到相册&lt;/text&gt;&lt;/view&gt;/*保存按钮*/</span></div><div><span style="font-weight: normal; font-size: medium;">&lt;/view&gt;</span></div><div><span style="font-weight: normal; font-size: medium;"><br></span></div><div><span style="font-weight: normal; font-size: medium;"><br></span></div><div><span style="font-weight: normal; font-size: medium;"><br></span></div><div><span style="font-size: x-large; font-weight: bold;">文件wxss:</span></div><div><p></p><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">overflow: auto;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width: 100%;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height: 100%;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">position: relative;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">background: #fff;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .canvas{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">position: absolute;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">top: 100%;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">left: 0;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">z-index: 2000;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width: 2250rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height: 3048rpx;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .pic{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width: 750rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height: 1028rpx;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .myewm{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width: 170rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height: 170rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">position: absolute;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">t</span><span style="font-weight: normal;">op: 808rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">left: 50rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">z-index: 5</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .myheader{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width:82rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height:82rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">position:absolute;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">top:852rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">left:95rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">z-index:6;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">border-radius:50%;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .savebtn{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width:650rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height:88rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">background:rgba(55,211,189,1);</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">border-radius:44rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">text-align: center;</span></div><div style="text-align: left;"><span style="font-weight: normal;">l</span><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">ine-height: 88rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">font-size:36rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">color:rgba(229,255,252,1);</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">position: absolute;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">top: 1068rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">left: 50rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">z-index:10000;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .savebtn image{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">width: 36rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">height: 36rpx;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">float:left;</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">margin:26rpx 10rpx 0 213rpx;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">.geeratepic .savebtn text{</span></div><div style="text-align: left;"><span style="text-align: center;">&nbsp; &nbsp;&nbsp;</span><span style="font-weight: normal;">float:left;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}&nbsp;&nbsp;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large; font-weight: bold;">文件js:</span></div><p></p><p></p><div style="font-weight: normal; text-align: left;">var api = require(\'../../../utils/carwash_api.js\');</div><div style="font-weight: normal; text-align: left;">const app = getApp();</div><div style="text-align: left;"><span style="font-weight: 400;"><br></span></div><span style="font-weight: normal;"><div style="text-align: left;">Page({</div></span><div style="text-align: left;"><br></div> <span style="font-weight: normal;"><div style="text-align: left;">data: {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;bgUrl:\'https://henzfin-ias.oss-cn-shenzhen.aliyuncs.com/images/f26ff0be-bfc6-43a5-9f11-6defb8df4d80.png\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;myewmurl:\'\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;myheaderpic:\'\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;showCanvas:false,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;postUrl:\'\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;showbtn:false</div></span><span style="font-weight: normal;"><div style="text-align: left;">},</div></span><span style="font-weight: normal;"><div style="text-align: left;">onLoad: function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;this.showPoster();</div></span><div style="text-align: left;"><br></div> <span style="font-weight: normal;"><div style="text-align: left;">},&nbsp;</div></span><div style="text-align: left;"><br></div><span style="font-weight: normal;"><div style="text-align: left;">// 弹出打卡海报</div></span><span style="font-weight: normal;"><div style="text-align: left;">showPoster: function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">var that = this;</div></span><div style="text-align: left;"><br></div><span style="font-weight: normal;"><div style="text-align: left;">// 下载海报图</div></span><span style="font-weight: normal;"><div style="text-align: left;">var promise1 = new Promise(function (resolve, reject) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;wx.downloadFile({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: \'https://henzfin-ias.oss-cn-shenzhen.aliyuncs.com/images/f26ff0be-bfc6-43a5-9f11-6defb8df4d80.png\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.setData({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;bgUrl: res.tempFilePath</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;resolve(res);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;},</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;fail: function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;console.log(\'fail\')</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">})</div></span><span style="font-weight: normal;"><div style="text-align: left;">});</div></span><div style="text-align: left;"><br></div> <span style="font-weight: normal;"><div style="text-align: left;">// 下载头像</div></span><span style="font-weight: normal;"><div style="text-align: left;">var promise2 = new Promise(function (resolve, reject) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;api.getpersoninfo().then((res) =&gt; {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(res)</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wx.downloadFile({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: res.data.open_info.avatar,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.setData({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myheaderpic: res.tempFilePath,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(res);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail: function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(\'fail\')</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">})</div></span><span style="font-weight: normal;"><div style="text-align: left;">//下载二维码</div></span><span style="font-weight: normal;"><div style="text-align: left;">var promise3 = new Promise(function (resolve, reject) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;api.getInvitedCode().then((res) =&gt; {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(888, res)</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (res.statusCode == 200) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wx.downloadFile({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;url: res.data.url,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.setData({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;myewmurl: res.tempFilePath,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showbtn: true,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(res);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail: function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;console.log(\'fail\')</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">})</div></span><span style="font-weight: normal;"><div style="text-align: left;">Promise.all([</div></span><span style="font-weight: normal;"><div style="text-align: left;">promise1, promise2, promise3</div></span><span style="font-weight: normal;"><div style="text-align: left;">]).then(res =&gt; {</div></span> <span style="font-weight: normal;"><div style="text-align: left;">})</div></span><span style="font-weight: normal;"><div style="text-align: left;">},</div></span><span style="font-weight: normal;"><div style="text-align: left;">/**</div></span><span style="font-weight: normal;"><div style="text-align: left;">* **2.点保存图片，Canvas绘制图片**</div></span><span style="font-weight: normal;"><div style="text-align: left;">// 保存海报</div></span><span style="font-weight: normal;"><div style="text-align: left;">*/</div></span><span style="font-weight: normal;"><div style="text-align: left;">savePoster:function(){</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;this.setData({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showCanvas:true</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">// 获取背景图片信息</div></span><span style="font-weight: normal;"><div style="text-align: left;">var that = this;</div></span><span style="font-weight: normal;"><div style="text-align: left;">let promise1 = new Promise(function (resolve, reject) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;wx.getImageInfo({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src: that.data.bgUrl,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(res);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">});</div></span><span style="font-weight: normal;"><div style="text-align: left;">//获取头像信息</div></span><span style="font-weight: normal;"><div style="text-align: left;">let promise2 = new Promise(function (resolve, reject) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;wx.getImageInfo({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src: that.data.myheaderpic,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(res);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">});</div></span><span style="font-weight: normal;"><div style="text-align: left;">//获取二维码</div></span><span style="font-weight: normal;"><div style="text-align: left;">let promise3 = new Promise(function (resolve, reject) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;wx.getImageInfo({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;src: that.data.myewmurl,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;resolve(res);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">});</div></span><span style="font-weight: normal;"><div style="text-align: left;">Promise.all([</div></span><span style="font-weight: normal;"><div style="text-align: left;">promise1, promise2, promise3</div></span><span style="font-weight: normal;"><div style="text-align: left;">]).then(res =&gt; {</div></span><div style="text-align: left;"><br></div><span style="font-weight: normal;"><div style="text-align: left;">wx.showLoading({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;title: \'分享图片生成中...\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;icon: \'loading\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;duration: 1000</div></span><span style="font-weight: normal;"><div style="text-align: left;">});</div></span><span style="font-weight: normal;"><div style="text-align: left;">console.log(898989,res)</div></span><div style="text-align: left;"><br></div><span style="font-weight: normal;"><div style="text-align: left;">/* 图片获取成功才执行后续代码 */</div></span><span style="font-weight: normal;"><div style="text-align: left;">var canvas = wx.createCanvasContext(\'mycanvas\');</div></span><span style="font-weight: normal;"><div style="text-align: left;">// 绘制背景图</div></span><span style="font-weight: normal;"><div style="text-align: left;">// canvas.drawImage(res[0].path, 0, 0, 628, 838);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.drawImage(res[0].path, 0, 0, 750, 1028);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.save()</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.beginPath()</div></span><span style="font-weight: normal;"><div style="text-align: left;">// 绘制活动二维码</div></span><span style="font-weight: normal;"><div style="text-align: left;">// canvas.drawImage(res[2].path, 490, 700, 100, 100);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.drawImage(res[2].path, 50, 808, 170, 170);</div></span><span style="font-weight: normal;"><div style="text-align: left;">// 绘制头像</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.save()</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.beginPath()</div></span><span style="font-weight: normal;"><div style="text-align: left;">// canvas.arc(50, 740, 30, 0, 2 * Math.PI)</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.arc(134, 894, 40, 0, 2 * Math.PI)</div></span><span style="font-weight: normal;"><div style="text-align: left;">// canvas.stroke();</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.clip()</div></span><div style="text-align: left;"><br></div> <span style="font-weight: normal;"><div style="text-align: left;">// canvas.drawImage(res[1].path, 20, 710, 60, 60);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.drawImage(res[1].path, 97, 852, 82, 82);</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.restore()</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;canvas.draw()</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;setTimeout(function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wx.canvasToTempFilePath({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;x: 0,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;y: 0,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;width: 750,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;height: 1028,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destWidth: 2250,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;destHeight: 3084,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;canvasId: \'mycanvas\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.setData({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;postUrl: res.tempFilePath,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.setData({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showCanvas: false</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;that.saveImageToAlbum();</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wx.hideLoading()</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;},</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;fail: function (res) { }</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;}, 500)</div></span><span style="font-weight: normal;"><div style="text-align: left;">})</div></span><div style="text-align: left;"><br></div><span style="font-weight: normal;"><div style="text-align: left;">},</div></span><div style="text-align: left;"><br></div><span style="font-weight: normal;"><div style="text-align: left;">saveImageToAlbum: function () {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;var that = this;</div></span><span style="font-weight: normal;"><div style="text-align: left;">//将图片保存到相册&nbsp;</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;wx.saveImageToPhotosAlbum({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;filePath: that.data.postUrl,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success(res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;wx.showModal({</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;title: \'保存成功\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;content: \'图片成功保存到相册了，快去分享朋友圈吧\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;showCancel: false,</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;confirmText: \'好的\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;confirmColor: \'#818FFB\',</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;success: function (res) {</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;if (res.confirm) {}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;}</div></span><span style="font-weight: normal;"><div style="text-align: left;">&nbsp;&nbsp;&nbsp;&nbsp;})</div></span><span style="font-weight: normal;"><div style="text-align: left;">},</div></span><div style="text-align: left;"><br></div><div style="font-weight: normal; text-align: left;">})</div><div style="font-weight: normal; text-align: left;"><br></div><div style="font-weight: normal; text-align: left;"><br></div><div style="text-align: left;">点击保存按钮：</div><div style="font-weight: normal; text-align: left;"><br></div><div style="font-weight: normal; text-align: left;"><img src="https://yy.kpzs.com/upload/image/1905311351184183.png" style="max-width:100%;"><br></div><p></p></div><div><span style="font-weight: normal; font-size: medium;"><br></span></div><br></div>',time:"2019-05-31 13:51:40",title:"小程序生成二维码图片保存在手机相册",txt:"项目中遇到需要分享到朋友圈，但是查询api发现小程序并没有提供分享到朋友圈的功能，只能实现通过canvas画一张海报然后保存到本地，让用户主动去发朋友圈。",type:"1"},{content:'<h1><span style="font-size: x-large;">1、分类</span></h1><div><span style="font-weight: normal;">ECMAScript js基本语法与标准 DOM Document Object Model文档对象模型 BOM Browser Object Model浏览器对象模型 tips：DOM和BOM都是一套API（Application programing interface）&nbsp;&nbsp;</span><span style="font-size: x-large;"><br></span></div><div><h2 id="102"><span style="font-size: x-large;">2、注释方式</span></h2></div><div><p><div style="text-align: left;">style /* */</div><div style="text-align: left;">body &lt;!-- --!&gt;&nbsp;</div><div style="text-align: left;">script //</div><div style="text-align: left;">/* */</div><div style="text-align: left;">/** * js说明文档注释 */&nbsp;&nbsp;</div><div style="text-align: left;"><br></div><div style="text-align: left;"></div></p><h2 id="103"><span style="font-size: x-large;">3、简单指令</span></h2></div><div><p style="text-align: left;">alert(""); 提示框；</p><p style="text-align: left;">confirm(""); 确认框，点击后会响应返回true或false；</p><p style="text-align: left;">prompt(); 弹出一个输入框；&nbsp;</p><p style="text-align: left;">document.write("");</p><p style="text-align: left;">console.log(""); 在控制台打印相应的信息；</p><p style="text-align: left;">console.dir(""); 在控制台打印出该对象的所有信息；&nbsp;&nbsp;</p><h2 id="104"><span style="font-size: x-large;">4、变量命名</span></h2></div><div><p style="text-align: left;"><span style="font-weight: normal;">数字（0-9）、字母（a-z，A-Z）、下划线（_）；</span></p><p style="text-align: left;"><span style="font-weight: normal;">&nbsp;tips:应避免保留字和关键字；&nbsp;&nbsp;</span></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p><p><div style="text-align: left;"><span style="font-size: x-large;">5、NaN和isNaN</span></div><div style="text-align: left;"><span style="font-weight: normal;">isNaN(number),如果number不是数字，则为true；</span></div><div style="text-align: left;"><span style="font-weight: normal;">Number(number),在转换为数字类型时，若number不是数字，则返回NaN；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">6、转义字符</span></div><div style="text-align: left;"><span style="font-weight: normal;">&nbsp;</span></div><div style="text-align: left;"><span style="font-weight: normal;">\r 回车</span></div><div style="text-align: left;"><span style="font-weight: normal;">\n 空格</span></div><div style="text-align: left;"><span style="font-weight: normal;">\t 缩进</span></div><div style="text-align: left;"><span style="font-weight: normal;">\\ 反斜杠</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">7、逻辑短路、逻辑中断</span></div><div style="text-align: left;"><span style="font-weight: normal;">true || 6; 逻辑或短路，左边为ture返回右值；</span></div><div style="text-align: left;"><span style="font-weight: normal;">6 &amp;&amp; true; 逻辑与短路，左边false返回右值；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">8、优先级</span></div><div style="text-align: left;"><span style="font-weight: normal;">* / %</span></div><div style="text-align: left;"><span style="font-weight: normal;">+ -</span></div><div style="text-align: left;"><span style="font-weight: normal;">&amp;&amp;</span></div><div style="text-align: left;"><span style="font-weight: normal;">||</span></div><div style="text-align: left;"><span style="font-weight: normal;">?</span></div><div style="text-align: left;"><span style="font-weight: normal;">tips：自上而下优先级越来越高</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">9、类型转换（type）</span></div><div style="text-align: left;"><span style="font-weight: normal;">parseInt("12a3"); 转为数字，尝试强转；</span></div><div style="text-align: left;"><span style="font-weight: normal;">parseFloat("123.123");</span></div><div style="text-align: left;"><span style="font-weight: normal;">data.toString();</span></div><div style="text-align: left;"><span style="font-weight: normal;">String(data);</span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:变量声明未赋值，其值为undefined；</span></div><div style="text-align: left;"><span style="font-weight: normal;">对象为空，其值为null；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">10、三元表达式</span></div><div style="text-align: left;"><span style="font-weight: normal;">eg : a&gt;b?a=1:a=2;</span></div><div style="text-align: left;"><span style="font-weight: normal;">格式:</span></div><div style="text-align: left;"><span style="font-weight: normal;">判断条件？true的时候执行的操作：false的时候执行的操作；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">11、数组Array</span></div><div style="text-align: left;"><span style="font-weight: normal;">（1）、定义法</span></div><div style="text-align: left;"><span style="font-weight: normal;">构造函数：</span></div><div style="text-align: left;"><span style="font-weight: normal;">var arr = new Array("123","abc","xxx");</span></div><div style="text-align: left;"><span style="font-weight: normal;">字面量：</span></div><div style="text-align: left;"><span style="font-weight: normal;">var arr = ["123","646","abc"];&nbsp;</span></div><div style="text-align: left;"><span style="font-weight: normal;">数组长度：</span></div><div style="text-align: left;"><span style="font-weight: normal;">var arr = new Array(6);(数组长度为6)；</span></div><div style="text-align: left;"><span style="font-weight: normal;">（2）、赋值</span></div><div style="text-align: left;"><span style="font-weight: normal;">arr[0]=1;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">12、形参和实参</span></div><div style="text-align: left;"><span style="font-weight: normal;">定义函数时，function funcA(a,b,c){}，其中的a、b、c即为形参；</span></div><div style="text-align: left;"><span style="font-weight: normal;">调用函数时，funcA(1,2,3);其中的1、2、3即为实参；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips：function里面有一个arguments对象，里面存有所有传进函数的实参；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">13、函数function</span></div><div style="text-align: left;"><span style="font-weight: normal;">（1）、函数命名</span></div><div style="text-align: left;"><span style="font-weight: normal;">1、 可以使用字符、数字、下划线、$；</span></div><div style="text-align: left;"><span style="font-weight: normal;">2、 不能以数字开头；</span></div><div style="text-align: left;"><span style="font-weight: normal;">3、 不能使用关键字和保留字；</span></div><div style="text-align: left;"><span style="font-weight: normal;">4、 区分大小写；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">5、 建议要有意义 -- 动词+名字结构；</span></div><div style="text-align: left;"><span style="font-weight: normal;">6、 驼峰命名法；</span></div><div style="text-align: left;"><span style="font-weight: normal;">7、 函数名不能重名，后面写的重名函数会把前面写的函数给覆盖掉；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（2）、函数的返回值</span></div><div style="text-align: left;"><span style="font-weight: normal;">返回值：</span></div><div style="text-align: left;"><span style="font-weight: normal;">当函数执行完毕之后，所得到的结果就是一个函数返回值</span></div><div style="text-align: left;"><span style="font-weight: normal;">任意函数都有返回值</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">1、 在函数内部没有显示的写有return的时候，函数的返回值是undefined；</span></div><div style="text-align: left;"><span style="font-weight: normal;">2、 当函数内部有return，但是return后面没有跟着任何内容或者数据的时候，</span></div><div style="text-align: left;"><span style="font-weight: normal;">函数的返回值是undefined，并且return后面的代码不会执行；</span></div><div style="text-align: left;"><span style="font-weight: normal;">3、 当return后面跟着内容或者数据的时候，函数的返回值就是这个跟着的内容或者数据；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（3）、函数的四种形式：</span></div><div style="text-align: left;"><span style="font-weight: normal;">1、没有参数，没有return；</span></div><div style="text-align: left;"><span style="font-weight: normal;">通常在于封装一段过程；</span></div><div style="text-align: left;"><span style="font-weight: normal;">2、没有参数，有return；</span></div><div style="text-align: left;"><span style="font-weight: normal;">通常用于内部封装引用其他函数（闭包，回调）；</span></div><div style="text-align: left;"><span style="font-weight: normal;">3、有参数，没有return；</span></div><div style="text-align: left;"><span style="font-weight: normal;">通常用于执行操作的封装；</span></div><div style="text-align: left;"><span style="font-weight: normal;">4、有参数，有return；</span></div><div style="text-align: left;"><span style="font-weight: normal;">常见形式；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（4）、匿名函数</span></div><div style="text-align: left;"><span style="font-weight: normal;">匿名函数的name属性值为anonymous；</span></div><div style="text-align: left;"><span style="font-weight: normal;">函数仅用一次的情况，即用即废；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">eg:</span></div><div style="text-align: left;"><span style="font-weight: normal;">setTimeout(function(){</span></div><div style="text-align: left;"><span style="font-weight: normal;">console.log(this.name);</span></div><div style="text-align: left;"><span style="font-weight: normal;">},1000);</span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:在1秒后在控制台打印出本函数的名称；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（5）、回调函数</span></div><div style="text-align: left;"><span style="font-weight: normal;">在一个函数当中，另一个函数作为参数传入该函数中，另一个的这个函数即为回调函数；</span></div><div style="text-align: left;"><span style="font-weight: normal;">eg:</span></div><div style="text-align: left;"><span style="font-weight: normal;">function atack(callback){</span></div><div style="text-align: left;"><span style="font-weight: normal;">return callback;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:在调用该函数时，指定callback是哪个函数；</span></div><div style="text-align: left;"><span style="font-weight: normal;">atack（func）；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（6）、短路运算</span></div><div style="text-align: left;"><span style="font-weight: normal;">作用：防止传入函数的数据不足，造成无法运行；</span></div><div style="text-align: left;"><span style="font-weight: normal;">eg：</span></div><div style="text-align: left;"><span style="font-weight: normal;">function getResult(a,b,fn) {</span></div><div style="text-align: left;"><span style="font-weight: normal;">fn &amp;&amp; fn();</span></div><div style="text-align: left;"><span style="font-weight: normal;">}（通常使用逻辑与的短路来决定是否执行回调函数；）</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">function getResult_2(a,b){</span></div><div style="text-align: left;"><span style="font-weight: normal;">a || 0;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}（通常用逻辑或的短路来防止实参不足的情况，强行赋值；）</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（7）、自执行函数</span></div><div style="text-align: left;"><span style="font-weight: normal;">（function func2(){</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">}）()</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:在函数定义的结束最后写入一个（），该函数定义完成后直接被调用执行；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（8）、递归</span></div><div style="text-align: left;"><span style="font-weight: normal;">在函数执行的最后再一次的调用自身；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:递归是一种非常耗资源的做法，通常为了简化运算，还会结合缓存进行；</span></div><div style="text-align: left;"><span style="font-weight: normal;">并且注意，递归必须要有结束判断条件（if），否则该函数被调用后就是死循环；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">14、数据类型</span></div><div style="text-align: left;"><span style="font-weight: normal;">（1）、简单数据类型</span></div><div style="text-align: left;"><span style="font-weight: normal;">string、number、boolean</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（2）、复杂数据类型</span></div><div style="text-align: left;"><span style="font-weight: normal;">String、Number、Boolean、Array、Math、Date、Obeject、function、RegExp(正则表达式)</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（3）、空数据类型</span></div><div style="text-align: left;"><span style="font-weight: normal;">* Null ---→Null的数据类型会返回一个Object</span></div><div style="text-align: left;"><span style="font-weight: normal;">* undifined</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips：用typeof可以进行判断数据类型；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips：定义的简单数据类型变量，其数据保存在变量中；</span></div><div style="text-align: left;"><span style="font-weight: normal;">而复杂数据类型，其变量保存的是数据所在的内存地址；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">15、内置对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">Array、Date、Math、String；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">16、（Math）数学对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">向上取整 Math.ceil(number);</span></div><div style="text-align: left;"><span style="font-weight: normal;">向下取整 Math.floor(number);</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">四舍五入 Math.round(number);</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">求多个数字之间的最大值 Math.max();</span></div><div style="text-align: left;"><span style="font-weight: normal;">求多个数字之间的最小值 Math.min();</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">求x的y次幂 Math.pow(x,y);</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">求正弦值 Math.sin(x);</span></div><div style="text-align: left;"><span style="font-weight: normal;">example:</span></div><div style="text-align: left;"><span style="font-weight: normal;">求一个角度的正弦值，要求x必须是一个额弧度值</span></div><div style="text-align: left;"><span style="font-weight: normal;">角度和弧度的转换公式：</span></div><div style="text-align: left;"><span style="font-weight: normal;">弧度 = 角度 * 2 * Math.PI / 360;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">Math.sin(30*2*Math.PI/360)</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">Math.abs(x); 得到一个数字的绝对值</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">17、（Array）数组对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">（1）、arr1.concat(arr2);</span></div><div style="text-align: left;"><span style="font-weight: normal;">数组拼接，结果为将arr2拼接到arr1的最后；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（2）、arr.join()；</span></div><div style="text-align: left;"><span style="font-weight: normal;">数组字符串输出，括号内可以指定元素连接的符号；</span></div><div style="text-align: left;"><span style="font-weight: normal;">eg:</span></div><div style="text-align: left;"><span style="font-weight: normal;">arr=["a","b","c","d"];</span></div><div style="text-align: left;"><span style="font-weight: normal;">console.log(arr.join("|")); (结果为"a|b|c|d")</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（3）、arr.pop();</span></div><div style="text-align: left;"><span style="font-weight: normal;">切除数组的最后一个元素，返回值为该元素；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（4）、arr.slice(start,end)</span></div><div style="text-align: left;"><span style="font-weight: normal;">获取，获取数组的指定片段，start必须有，如果参数为负数则从末尾开始选取；</span></div><div style="text-align: left;"><span style="font-weight: normal;">返回值为该片段组成的，一个新的数组；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（5）、arr.push</span></div><div style="text-align: left;"><span style="font-weight: normal;">添加，用于向数组的末尾添加新的元素，参数可以是多个；</span></div><div style="text-align: left;"><span style="font-weight: normal;">返回值为数组的新长度；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（6）、arr.splice</span></div><div style="text-align: left;"><span style="font-weight: normal;">1、用于向数组中指定的索引添加元素；</span></div><div style="text-align: left;"><span style="font-weight: normal;">arr.splice(2, 0, "William","asdfasdf");</span></div><div style="text-align: left;"><span style="font-weight: normal;">在第2个元素开始，删除的元素个数（可以为0，为0到结尾），</span></div><div style="text-align: left;"><span style="font-weight: normal;">加入元素为"William"、"asdfasdf"；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">2、用于替换数组中的元素；</span></div><div style="text-align: left;"><span style="font-weight: normal;">arr.splice(2,1,"William")；&nbsp;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">3、用于删除数组中的元素；</span></div><div style="text-align: left;"><span style="font-weight: normal;">arr.splice(2,2);</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（7）、arr.indexOf(element);</span></div><div style="text-align: left;"><span style="font-weight: normal;">查找，在数组中查找element，返回值为索引，如果没有该元素返回-1；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（8）、arr.sort(function);</span></div><div style="text-align: left;"><span style="font-weight: normal;">排序，function为一个函数；</span></div><div style="text-align: left;"><span style="font-weight: normal;">eg:</span></div><div style="text-align: left;"><span style="font-weight: normal;">function sortNumber(a,b){</span></div><div style="text-align: left;"><span style="font-weight: normal;">return a-b;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">arr.sort(sortNumber);(从小到大排序)</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips：如果a-b改成b-a，那么执行的操作为从大到小；</span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:字符串对象（String）的方法与Array的方法类似；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">18、（Date）日期对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getTime()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getMilliseconds()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getSeconds()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getMinutes()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getHours()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getDay()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getDate()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getMonth()</span></div><div style="text-align: left;"><span style="font-weight: normal;">date.getFullYear()</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:很多，查文档</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">19、（String）对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">charAt(index)</span></div><div style="text-align: left;"><span style="font-weight: normal;">str[index] 获取字符串指定位置的字符</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">concat() 拼接字符串</span></div><div style="text-align: left;"><span style="font-weight: normal;">---------------------------</span></div><div style="text-align: left;"><span style="font-weight: normal;">slice(start,end)/</span></div><div style="text-align: left;"><span style="font-weight: normal;">substring(start,end) 截取从start开始，end结束的字符，</span></div><div style="text-align: left;"><span style="font-weight: normal;">返回一个新的字符串，若start为负数，那么从最后一个字符开始；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">substr(start,length) 截取从start开始，length长度的字符，得到一个新的的字符串</span></div><div style="text-align: left;"><span style="font-weight: normal;">---------------------------</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">indexOf(char) 获取指定字符第一次在字符串中的位置</span></div><div style="text-align: left;"><span style="font-weight: normal;">lastIndexOf(char) 获取指定字符最后一次出现在字符串中的位置</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">trim() 去除字符串前后的空白</span></div><div style="text-align: left;"><span style="font-weight: normal;">---------------------------</span></div><div style="text-align: left;"><span style="font-weight: normal;">toUpperCase()</span></div><div style="text-align: left;"><span style="font-weight: normal;">toLocaleUpperCase() 转换为大写</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">toLowerCase()</span></div><div style="text-align: left;"><span style="font-weight: normal;">toLocaleLowerCawse() 转换为小写</span></div><div style="text-align: left;"><span style="font-weight: normal;">---------------------------</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">replace() 替换字符</span></div><div style="text-align: left;"><span style="font-weight: normal;">split() 分割字符串为数组</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">20、自定义对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">对象：无序属性的集合；</span></div><div style="text-align: left;"><span style="font-weight: normal;">特征：属性（key）；</span></div><div style="text-align: left;"><span style="font-weight: normal;">行为：方法（value）；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">js是基于对象的弱类型语言；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">继承：基于类，子类可以从父类得到的特征；&nbsp;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">工厂模式：定义一个function构造函数，作为对象，要创建对象直接调用该构造函数，加new关键字；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">构造函数：定义对象的函数，里面存有该对象拥有的基本属性和方法；</span></div><div style="text-align: left;"><span style="font-weight: normal;">命名首字母大写，this会自动指代当前对象；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">访问对象属性：</span></div><div style="text-align: left;"><span style="font-weight: normal;">obj[key];</span></div><div style="text-align: left;"><span style="font-weight: normal;">obj.key;</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">遍历对象：</span></div><div style="text-align: left;"><span style="font-weight: normal;">for(key in obj){</span></div><div style="text-align: left;"><span style="font-weight: normal;">key 为属性名；</span></div><div style="text-align: left;"><span style="font-weight: normal;">obj[key] 为属性值（value）；</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">21、JSON</span></div><div style="text-align: left;"><span style="font-weight: normal;">{</span></div><div style="text-align: left;"><span style="font-weight: normal;">"name" : "李狗蛋",</span></div><div style="text-align: left;"><span style="font-weight: normal;">"age" : 18,</span></div><div style="text-align: left;"><span style="font-weight: normal;">"color" : "yellow"</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">1、 所有的属性名，必须使用双引号包起来；</span></div><div style="text-align: left;"><span style="font-weight: normal;">2、 字面量侧重的描述对象，JSON侧重于数据传输；</span></div><div style="text-align: left;"><span style="font-weight: normal;">3、 JSON不支持undefined；</span></div><div style="text-align: left;"><span style="font-weight: normal;">4、 JSON不是对象，从服务器发来的json一般是字符串，</span></div><div style="text-align: left;"><span style="font-weight: normal;">通过JSON.parse(jsonDate.json)可以将其转换成js对象；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">22、JS解析</span></div><div style="text-align: left;"><span style="font-weight: normal;">（1）、作用域</span></div><div style="text-align: left;"><span style="font-weight: normal;">全局作用域：整个代码所有地方都可以调用；</span></div><div style="text-align: left;"><span style="font-weight: normal;">局部作用域：在函数内部声明的变量，只可以在函数内部使用；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">（2）、变量提升和函数提升</span></div><div style="text-align: left;"><span style="font-weight: normal;">预解析：在解析的时候，var和function都会被提升到代码的最顶端；</span></div><div style="text-align: left;"><span style="font-weight: normal;">但是赋值操作不会被提升，定义和函数才会被提升；</span></div><div style="text-align: left;"><span style="font-weight: normal;">if里面的变量定义也会被提升，但是赋值操作不会；</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-size: x-large;">23、其他细节（tips）</span></div><div style="text-align: left;"><span style="font-weight: normal;">(1)、元素由对象组成的数组进行排序</span></div><div style="text-align: left;"><span style="font-weight: normal;">eg：</span></div><div style="text-align: left;"><span style="font-weight: normal;">var data = [</span></div><div style="text-align: left;"><span style="font-weight: normal;">{title: "老司机", count: 20},</span></div><div style="text-align: left;"><span style="font-weight: normal;">{title: "诗人", count: 5},</span></div><div style="text-align: left;"><span style="font-weight: normal;">{title: "歌手", count: 10},</span></div><div style="text-align: left;"><span style="font-weight: normal;">{title: "隔壁老王", count: 30},</span></div><div style="text-align: left;"><span style="font-weight: normal;">{title: "水手", count: 7},</span></div><div style="text-align: left;"><span style="font-weight: normal;">{title: "葫芦娃", count: 6},</span></div><div style="text-align: left;"><span style="font-weight: normal;">];</span></div><div style="text-align: left;"><span style="font-weight: normal;">//该数组的元素都为对象。我们需求为根据count的值给数组重新排序。</span></div><div style="text-align: left;"><span style="font-weight: normal;">//解决方案：使用sort方法，对传入的函数做手脚。</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">function sortArr(a,b){</span></div><div style="text-align: left;"><span style="font-weight: normal;">return a.count &gt; b.count;&nbsp;</span></div><div style="text-align: left;"><span style="font-weight: normal;">}</span></div><div style="text-align: left;"><span style="font-weight: normal;">data.sort(sortArr);</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">//原本的a和b的比较方法变成a.count和b.count；</span></div><div style="text-align: left;"><span style="font-weight: normal;">//原本的比较方法可以参见17，数组对象</span></div><div style="text-align: left;"><span style="font-weight: normal;">//至此，data将以count值从小到大排列。</span></div><div style="text-align: left;"><span style="font-weight: normal;"><br></span></div><div style="text-align: left;"><span style="font-weight: normal;">tips:Array对象的sort方法传入的为比较函数，比较函数里return排序比较的方法；</span></div><div style="text-align: left;"><span style="font-weight: normal;">原始的sort方法传入的函数内部return的值为a&gt;b，</span></div><div style="text-align: left;"><span style="font-weight: normal;">通过修改sort传入的函数，可以实现对元素为对象的数组的排序！</span></div></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p><p style="text-align: left;"><span style="font-weight: normal;"><br></span></p></div>',time:"2019-05-31 14:15:50",title:"js基本语法汇总",txt:"文章转载至:http://www.cnblogs.com/wzhiq896/p/6783296.html",type:"1"}]}},"520a":function(t,n,e){"use strict";var s=e("0bfb"),l=RegExp.prototype.exec,i=String.prototype.replace,a=l,p="lastIndex",o=function(){var t=/a/,n=/b*/g;return l.call(t,"a"),l.call(n,"a"),0!==t[p]||0!==n[p]}(),f=void 0!==/()??/.exec("")[1],d=o||f;d&&(a=function(t){var n,e,a,d,g=this;return f&&(e=new RegExp("^"+g.source+"$(?!\\s)",s.call(g))),o&&(n=g[p]),a=l.call(g,t),o&&a&&(g[p]=g.global?a.index+a[0].length:n),f&&a&&a.length>1&&i.call(a[0],e,function(){for(d=1;d<arguments.length-2;d++)void 0===arguments[d]&&(a[d]=void 0)}),a}),t.exports=a},"5f1b":function(t,n,e){"use strict";var s=e("23c6"),l=RegExp.prototype.exec;t.exports=function(t,n){var e=t.exec;if("function"===typeof e){var i=e.call(t,n);if("object"!==typeof i)throw new TypeError("RegExp exec method returned something other than an Object or null");return i}if("RegExp"!==s(t))throw new TypeError("RegExp#exec called on incompatible receiver");return l.call(t,n)}},a481:function(t,n,e){"use strict";var s=e("cb7c"),l=e("4bf8"),i=e("9def"),a=e("4588"),p=e("0390"),o=e("5f1b"),f=Math.max,d=Math.min,g=Math.floor,y=/\$([$&`']|\d\d?|<[^>]*>)/g,v=/\$([$&`']|\d\d?)/g,b=function(t){return void 0===t?t:String(t)};e("214f")("replace",2,function(t,n,e,r){return[function(s,l){var i=t(this),a=void 0==s?void 0:s[n];return void 0!==a?a.call(s,i,l):e.call(String(i),s,l)},function(t,n){var l=r(e,t,this,n);if(l.done)return l.value;var g=s(t),y=String(this),v="function"===typeof n;v||(n=String(n));var x=g.global;if(x){var h=g.unicode;g.lastIndex=0}var w=[];while(1){var c=o(g,y);if(null===c)break;if(w.push(c),!x)break;var u=String(c[0]);""===u&&(g.lastIndex=p(y,i(g.lastIndex),h))}for(var z="",q=0,M=0;M<w.length;M++){c=w[M];for(var k=String(c[0]),H=f(d(a(c.index),y.length),0),Y=[],D=1;D<c.length;D++)Y.push(b(c[D]));var j=c.groups;if(v){var S=[k].concat(Y,H,y);void 0!==j&&S.push(j);var C=String(n.apply(void 0,S))}else C=m(k,y,H,Y,j,n);H>=q&&(z+=y.slice(q,H)+C,q=H+k.length)}return z+y.slice(q)}];function m(t,n,s,i,a,p){var o=s+t.length,f=i.length,d=v;return void 0!==a&&(a=l(a),d=y),e.call(p,d,function(e,l){var p;switch(l.charAt(0)){case"$":return"$";case"&":return t;case"`":return n.slice(0,s);case"'":return n.slice(o);case"<":p=a[l.slice(1,-1)];break;default:var d=+l;if(0===d)return e;if(d>f){var y=g(d/10);return 0===y?e:y<=f?void 0===i[y-1]?l.charAt(1):i[y-1]+l.charAt(1):e}p=i[d-1]}return void 0===p?"":p})}})},b0c5:function(t,n,e){"use strict";var s=e("520a");e("5ca1")({target:"RegExp",proto:!0,forced:s!==/./.exec},{exec:s})}}]);